networks:
  savvy-network:
    driver: bridge
    name: savvy-network

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: on-failure
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - savvy-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: on-failure
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - savvy-network

  user-db:
    image: postgres:17
    container_name: user-db
    restart: always
    environment:
      POSTGRES_DB: user_service
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - user_data:/var/lib/postgresql/data
      - ./init-dumps/user_service_dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - savvy-network

  transaction-db:
    image: postgres:17
    container_name: transaction-db
    restart: always
    environment:
      POSTGRES_DB: transaction_service
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - transaction_data:/var/lib/postgresql/data
      - ./init-dumps/transaction_service_dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - savvy-network

  budgeting-db:
    image: postgres:17
    container_name: budgeting-db
    restart: always
    environment:
      POSTGRES_DB: budgeting_service
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - budgeting_data:/var/lib/postgresql/data
      - ./init-dumps/budgeting_service_dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - savvy-network

  test-db:
    image: postgres:17
    container_name: test-db
    restart: always
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5436:5432"
    volumes:
      - test_db_data:/var/lib/postgresql/data
      - ./init-dumps/test_db_dump.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - savvy-network

  user-service:
    build:
      context: ../savvy-app-backend/user-service
      dockerfile: Dockerfile
    container_name: user-service
    restart: on-failure
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/user_service
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      KAFKA_BROKER: kafka:9093
    depends_on:
      - user-db
    networks:
      - savvy-network

  user-service-test:
    build:
      context: ../savvy-app-backend/user-service
      dockerfile: Dockerfile
    container_name: user-service-test
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_DATASOURCE_URL: jdbc:postgresql://test-db:5432/test_db
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      KAFKA_BROKER: kafka:9093
    depends_on:
      - test-db
    networks:
      - savvy-network

  transaction-service:
    build:
      context: ../savvy-app-backend/transaction-service
      dockerfile: Dockerfile
    container_name: transaction-service
    restart: on-failure
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://transaction-db:5432/transaction_service
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      KAFKA_BROKER: kafka:9093
    depends_on:
      - transaction-db
    networks:
      - savvy-network

  transaction-service-test:
    build:
      context: ../savvy-app-backend/transaction-service
      dockerfile: Dockerfile
    container_name: transaction-service-test
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_DATASOURCE_URL: jdbc:postgresql://test-db:5432/test_db
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      KAFKA_BROKER: kafka:9093
    depends_on:
      - test-db
    networks:
      - savvy-network

  budgeting-service:
    build:
      context: ../savvy-app-backend/budgeting-service
      dockerfile: Dockerfile
    container_name: budgeting-service
    restart: on-failure
    ports:
      - "8082:8082"
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://budgeting-db:5432/budgeting_service
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      KAFKA_BROKER: kafka:9093
    depends_on:
      - budgeting-db
    networks:
      - savvy-network

  api-gateway:
    build: ../savvy-app-gateway
    container_name: api-gateway
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      - user-service
      - transaction-service
      - budgeting-service
    networks:
      - savvy-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-remote-write-receiver"
    networks:
      - savvy-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - savvy-network

volumes:
  grafana-storage:
  prometheus-data:
  user_data:
  transaction_data:
  budgeting_data:
  test_db_data:
