spring.application.name=user-service

spring.datasource.url=jdbc:postgresql://ep-wispy-mode-a9l5a52m-pooler.gwc.azure.neon.tech/neondb?sslmode=require
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=8080

spring.kafka.bootstrap-servers=kafka-0.kafka-headless.kafka.svc.cluster.local:9092

spring.kafka.consumer.group-id=user-service-group
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

kafka.topic.transaction=transaction
kafka.topic.payment=payment
kafka.topic.payment-request=payment-request

management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
management.endpoint.health.show-details=always
management.metrics.enable.health=true
management.health.probes.enabled=true
management.endpoint.health.probes.enabled=true
management.endpoints.web.base-path=/actuator
management.metrics.tags.application=${spring.application.name}